class No:
    def __init__(self, valor):
        self.valor = valor
        self.proximo = None

class Pilha:
    def __init__(self):
        self._topo = None
        self.tamanho = 0
   
    def __len__(self):
        return self.tamanho
   
    def is_empty(self):
        return self.tamanho == 0
   
    def push(self, valor):
        no = No(valor)
        no.proximo = self._topo
        self._topo = no
        self.tamanho += 1
   
    def pop(self):
        if self.is_empty():
            raise IndexError("A pilha está vazia")
        valor = self._topo.valor
        self._topo = self._topo.proximo
        self.tamanho -= 1
        return valor
   
    def topo(self):
        if self.is_empty():
            raise IndexError("A pilha está vazia")
        return self._topo.valor
    
#Escreva um programa que use uma pilha para converter um número hexadecimal para decimal.

def converter_hexadecimal_para_decimal(hexadecimal):
    pilha = Pilha()
    for char in hexadecimal:
        if char.isdigit():
            pilha.push(int(char))
        elif char.isalpha():
            valor = ord(char.upper()) - ord('A') + 10
            pilha.push(valor)

    decimal = 0
    posicao_decimal = 0
    while not pilha.is_empty():
        digit = pilha.pop()
        decimal += digit * (16 ** posicao_decimal)
        posicao_decimal += 1

    return decimal

hexadecimal = input("Digite um número hexadecimal: ")

decimal = converter_hexadecimal_para_decimal(hexadecimal)

print("Número decimal:", decimal)