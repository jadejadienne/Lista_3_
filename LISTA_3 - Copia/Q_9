class No:
    def __init__(self, valor):
        self.valor = valor
        self.proximo = None

class Pilha:
    def __init__(self):
        self._topo = None
        self.tamanho = 0
   
    def __len__(self):
        return self.tamanho
   
    def is_empty(self):
        return self.tamanho == 0
   
    def push(self, valor):
        no = No(valor)
        no.proximo = self._topo
        self._topo = no
        self.tamanho += 1
   
    def pop(self):
        if self.is_empty():
            raise IndexError("A pilha está vazia")
        valor = self._topo.valor
        self._topo = self._topo.proximo
        self.tamanho -= 1
        return valor
   
    def topo(self):
        if self.is_empty():
            raise IndexError("A pilha está vazia")
        return self._topo.valor
    
#Escreva um programa que leia uma string contendo apenas números e use uma pilha para verificar se a string é um número de palíndromo.

def verificar_palindromo(numero):
    pilha = Pilha()
    for digito in numero:
        pilha.push(digito)

    palindromo = True
    for digito in numero:
        if digito != str(pilha.pop()):
            palindromo = False
            break

    return palindromo

numero = input("Digite um número: ")

resultado = verificar_palindromo(numero)

if resultado == True:
    print("\nO número", numero, "é um palíndromo")
else:
    print("\nO número", numero, "não é um palíndromo")
    
