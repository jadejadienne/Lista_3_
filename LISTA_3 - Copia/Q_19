class No:
    def __init__(self, valor):
        self.valor = valor
        self.proximo = None

class Pilha:
    def __init__(self):
        self._topo = None
        self.tamanho = 0
   
    def __len__(self):
        return self.tamanho
   
    def is_empty(self):
        return self.tamanho == 0
   
    def push(self, valor):
        no = No(valor)
        no.proximo = self._topo
        self._topo = no
        self.tamanho += 1
   
    def pop(self):
        if self.is_empty():
            raise IndexError("A pilha está vazia")
        valor = self._topo.valor
        self._topo = self._topo.proximo
        self.tamanho -= 1
        return valor
   
    def topo(self):
        if self.is_empty():
            raise IndexError("A pilha está vazia")
        return self._topo.valor
    
#Escreva um programa que use uma pilha para converter um número binário para octal.

def converterBinParaOctal(numero_binario):
    pilha = Pilha()
    
    decimal = 0
    for digito in numero_binario:
        if digito != '0' and digito != '1':
            raise Exception("Número binário inválido")
        decimal = decimal * 2 + int(digito)
    
    while decimal > 0:
        resto = decimal % 8
        pilha.push(resto)
        decimal //= 8
    
    if pilha.is_empty():
        return '0'
    
    numero_octal = ''
    while not pilha.is_empty():
        numero_octal += str(pilha.pop())
    
    return numero_octal


numero_binario = input("Digite um número binário: ")
numero_octal = converterBinParaOctal(numero_binario)
print("Número octal: ", numero_octal)